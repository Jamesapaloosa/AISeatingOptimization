
public class Driver {
	public static void main(String[] args) {
		State currentState;
		long startTime;
		long endTime;
		long duration;
		FileData inputFileData;
		//command line inputs required here
		
		
		//Code to call and parse file
		startTime = System.nanoTime();
		DataParser inputFileParser = new DataParser(args[0]);
		try{
			inputFileData = inputFileParser.readfile();
		}catch(Exception e){
			System.out.println("Fatal error in inputFileParser method! ");
			return;
		}
		endTime = System.nanoTime();
		duration = endTime - startTime;
		System.out.println("input file parser speed: " + duration);
		
		
		//preassigned courses to a time-slot and setup all of the time-slots based on imported data
		startTime = System.nanoTime();
		currentState = StateMaker.convertFromFileData(inputFileData);
		duration = endTime - startTime;
		System.out.println("input file parser speed: " + duration);
		
		
		//Or tree
		startTime = System.nanoTime();
		OrTree thisOrTree = new OrTree(currentState);
		endTime = System.nanoTime();
		duration = endTime - startTime;
		System.out.println("or tree speed: " + duration);
		
		
		//Genetic algorithm here
		
		//
		
		
		//Print output to the console.
		startTime = System.nanoTime();
		OutputGenerator output = new OutputGenerator(currentState);
		output.OutputResultToCommandLine();
		endTime = System.nanoTime();
		duration = endTime - startTime;
		System.out.println("Ouput generator speed: " + duration);
		
	}
}
